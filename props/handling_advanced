Props are passed from parent to child down the component tree. It is useful to know a few tricks to make passing props more convenient

Props Destructuring via Object Destructuring

ex.) 

const user = {
firstName: 'Robin',
lastName: 'Weinrich',
};

//Without object destructuring:
const firstName = user.firstName;
const lastName = user.lastName;

// With object destructuring:

const { firstName, lastName } = user;

If we need to access multiple properties of an object, using one line of code instead of multiple lines of code is often simpler and more elegant

To make use of destructuring, first we have to refactor the Search component's arrow function from the concise body into block body. Second, we can apply
destructuring of the props in the component's function body:

const Search = (props) => {
  const { search, onSearch } = props;

  return (
  <div>
    <label htmlFor="search">Search: </label>
    <input 
      id="search" 
      type="text" 
      value={search} 
      onChange={onSearch} 
      />
  </div>
);
};

We can take it one step further by destructuring the props object right away in the function signature of our component, omitting the function's block
body of the component again:


const Search = ({ search, onSearch }) => (
  <div>
    <label htmlFor="search">Search: </label>
    <input 
      id="search" 
      type="text" 
      value={search} 
      onChange={onSearch} 
      />
  </div>
);

React's props are rarely used in components by themselves

The List and Item components can perform the same props destructuring:

const List = ({ list }) => (
<ul>
  {list.map((item) => (
    <Item key={item.objectID} item={item} />
  ))}
</ul>
);

const Item = ({ item }) => (
<li>
  <span>
    <a href={item.url}>{item.title}</a>
  </span>
  <span>{item.author}</span>
  <span>{item.num_comments}</span>
  <span>{item.points}</span>
</li>
);

Nested Destructuring
Helps us to gather all the needed information of the item object in the function signature for its immediate usage in the component's elements

const Item = ({
  item: {
  title,
  url,
  author,
  num_comments,
  points,
  },
 }) => (
 <li>
 <span>
   <a href={url}>{title}</a>
 </span>
 <span>{author}</span>
 <span>{num_comments}</span>
 <span>{points}</span>
 
 Spread and Rest Operators
 
